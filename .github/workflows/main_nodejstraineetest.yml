# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - nodejstraineetest

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest


    steps:
        - name: Checkout Code
          uses: actions/checkout@v2
            
        - name: Set Variables
          id: set-variables
          run: |
             echo "ughhhhh dai sak tee huhhhh"
             # Set the variables you want to pass
             echo "::set-output name=SONARQUBE_URL::http://4.194.13.61:9000"
             echo "::set-output name=SONARQUBE_TOKEN::${{ secrets.SONARQUBE_TOKEN }}"
             echo "::set-output name=PROJECT_KEY::from-template-project"
             echo "::set-output name=PROJECT_NAME::from-template-project"
             echo "::set-output name=DESTINATION_DIR::/home/runner/work/hello-nodejs/hello-nodejs"
             echo "::set-output name=REPOSITORY_URL::https://github.com/MuZikZz-Org/hello-nodejs"
    
        - name: Run SonarQube Scanner
          uses: MuZikZz-Org/.github/workflow-templates/sonarqube@main
          with:
            SONARQUBE_URL: ${{ steps.set-variables.outputs.SONARQUBE_URL }} # Pass other_variable as an input
            SONARQUBE_TOKEN: ${{ steps.set-variables.outputs.SONARQUBE_TOKEN }}
            PROJECT_KEY: ${{ steps.set-variables.outputs.PROJECT_KEY }}
            PROJECT_NAME: ${{ steps.set-variables.outputs.PROJECT_NAME }}
            DESTINATION_DIR: ${{ steps.set-variables.outputs.DESTINATION_DIR }}
            REPOSITORY_URL: ${{ steps.set-variables.outputs.REPOSITORY_URL }}
            # with:
            #   repository: "test-sonar-cross-repo"  
        
        - name: Set up Node.js version
          uses: actions/setup-node@v1
          with:
            node-version: '18.x'
  
        - name: npm install, build, and test
          run: |
            npm init -y
            # npm install -D webpack-cli -y
            # npm install
            # node server.js
            npm run build --if-present
            # npm run test --if-present
  
        - name: Upload artifact for deployment job
          uses: actions/upload-artifact@v2
          with:
            name: node-app
            path: .
  
  deploy:
      runs-on: ubuntu-latest
      needs: build
      environment:
        name: 'Production'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
  
      steps:
        - name: Download artifact from build job
          uses: actions/download-artifact@v2
          with:
            name: node-app
  
        - name: 'Deploy to Azure Web App'
          id: deploy-to-webapp
          uses: azure/webapps-deploy@v2
          with:
            app-name: 'nodejstraineetest'
            slot-name: 'Production'
            publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_C994D83E94174BD3A77668F5E2147953 }}
            package: .
  
          # env:
          #   AZURE_WEBAPP_NAME: ${{ secrets.AZURE_APP_NAME }}
          #   AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          #   AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          #   AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          #   AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          # run: |
          #   az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET --tenant $AZURE_TENANT_ID
          #   az webapp deployment source config-zip --name $AZURE_WEBAPP_NAME --resource-group your-resource-group --src .  # Use the correct resource group
  
